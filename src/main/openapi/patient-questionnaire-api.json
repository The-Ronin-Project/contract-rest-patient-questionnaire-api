{
  "openapi": "3.0.2",
  "info": {
    "title": "Patient Questionnaire Service REST API - OpenAPI 3.0",
    "description": "REST API contract for the patient questionnaire service. Includes patient-facing and admin-facing endpoints.\n\nSome useful links:\n- [Questionnaire Service Repository](https://github.com/projectronin/prodeng-patient-questionnaire)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "ddionise@projectronin.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Admin",
      "description": "Endpoints used by the admin console"
    },
    {
      "name": "Patient",
      "description": "Endpoints used by the patient apps"
    }
  ],
  "paths": {
    "/management/tenants/{tenantId}/questionnaires": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Questionnaire",
        "description": "Create a questionnaire for a tenant",
        "operationId": "createQuestionnaire",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the tenant who will be using the questionnaire",
            "example": "ca41ec2f-621d-4b7d-93e6-38ec50854b5e"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertQuestionnaireRequestBody"
              },
              "examples": {
                "UpsertQuestionnaireRequestBody": {
                  "$ref": "#/components/examples/UpsertQuestionnaireRequestBody"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertQuestionnaireResponseBody"
                },
                "examples": {
                  "CreateQuestionnaireResponse": {
                    "$ref": "#/components/examples/UpsertQuestionnaireResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "BadRequestExample": {
                    "$ref": "#/components/examples/BadRequestException"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Fetch questionnaires for a single tenant",
        "summary": "Fetch Questionnaires",
        "operationId": "fetchQuestionnaires",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the tenant who will be using the questionnaire",
            "example": "ca41ec2f-621d-4b7d-93e6-38ec50854b5e"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Paging param to control the number of questionnaires to get back",
            "example": 20,
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Zero-indexed page number",
            "example": 0,
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchQuestionnairesResponseBody"
                },
                "examples": {
                  "FetchQuestionnairesResponse": {
                    "$ref": "#/components/examples/FetchQuestionnairesResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "NotFoundExample": {
                    "$ref": "#/components/examples/NotFoundException"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/tenants/{tenantId}/questionnaires/{questionnaireId}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update Questionnaire",
        "description": "Update a questionnaire for a tenant",
        "operationId": "updateQuestionnaire",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the tenant who will be using the questionnaire",
            "example": "ca41ec2f-621d-4b7d-93e6-38ec50854b5e"
          },
          {
            "in": "path",
            "name": "questionnaireId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the questionnaire that is being updated. If omitted, a new questionnaire will be created",
            "example": "d78f8706-6e68-49b0-a57c-4a0f3aedb128"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertQuestionnaireRequestBody"
              },
              "examples": {
                "UpsertQuestionnaireRequestBody": {
                  "$ref": "#/components/examples/UpsertQuestionnaireRequestBody"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertQuestionnaireResponseBody"
                },
                "examples": {
                  "UpsertQuestionnaireResponse": {
                    "$ref": "#/components/examples/UpsertQuestionnaireResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "BadRequestExample": {
                    "$ref": "#/components/examples/BadRequestException"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "NotFoundExample": {
                    "$ref": "#/components/examples/NotFoundException"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/patients/{patientId}/questionnaires" : {
      "get": {
        "tags": [
          "Patient"
        ],
        "description": "Fetch a list of questionnaires for a patient",
        "summary": "Fetch Patient Questionnaires",
        "operationId": "fetchPatientQuestionnaires",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the tenant for the current tenant",
            "example": "1xrekpx5"
          },
          {
            "in": "path",
            "name": "patientId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The UDP ID of the current patient",
            "example": "018c275e-c378-7c4a-a112-157e4c0e4cb5"
          },
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of questionnaire ids to fetch",
            "example": [
              "018c3b42-246a-7cc9-9f2b-2eb87cd110c8",
              "018c3b42-604d-7d26-8c92-4a276a58e56c"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchPatientQuestionnairesResponseBody"
                },
                "examples": {
                  "FetchPatientQuestionnairesResponse": {
                    "$ref": "#/components/examples/FetchPatientQuestionnairesResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "BadRequestExample": {
                    "$ref": "#/components/examples/BadRequestException"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "ForbiddenExample": {
                    "$ref": "#/components/examples/ForbiddenException"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "NotFoundExample": {
                    "$ref": "#/components/examples/NotFoundException"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/patients/{patientId}/questionnaires/{questionnaireId}" : {
      "get": {
        "tags": [
          "Patient"
        ],
        "description": "Fetch a single questionnaire by ID for a patient",
        "summary": "Fetch Patient Questionnaire",
        "operationId": "fetchPatientQuestionnaire",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the tenant for the current tenant",
            "example": "1xrekpx5"
          },
          {
            "in": "path",
            "name": "patientId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The UDP ID of the current patient",
            "example": "018c275e-c378-7c4a-a112-157e4c0e4cb5"
          },
          {
            "in": "path",
            "name": "questionnaireId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the questionnaire",
            "example": "7f574040-e8b4-4c70-b2e5-dfa48d0b5455"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchPatientQuestionnaireResponseBody"
                },
                "examples": {
                  "FetchPatientQuestionnaireResponse": {
                    "$ref": "#/components/examples/FetchPatientQuestionnaireResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "BadRequestExample": {
                    "$ref": "#/components/examples/BadRequestException"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "ForbiddenExample": {
                    "$ref": "#/components/examples/ForbiddenException"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "NotFoundExample": {
                    "$ref": "#/components/examples/NotFoundException"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/patients/{patientId}/questionnaires/{questionnaireId}/questionnaire-responses": {
      "post": {
        "tags": [
          "Patient"
        ],
        "summary": "Create Patient QuestionnaireResponse",
        "description": "Create a questionnaire response for a patient",
        "operationId": "createPatientQuestionnaireResponse",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the tenant for the current tenant",
            "example": "1xrekpx5"
          },
          {
            "in": "path",
            "name": "patientId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The UDP ID of the current patient",
            "example": "018c275e-c378-7c4a-a112-157e4c0e4cb5"
          },
          {
            "in": "path",
            "name": "questionnaireId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the questionnaire",
            "example": "7f574040-e8b4-4c70-b2e5-dfa48d0b5455"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FHIR_QuestionnaireResponse"
              },
              "examples": {
                "FHIR_QuestionnaireResponseExample": {
                  "$ref": "#/components/examples/FHIR_QuestionnaireResponseExample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePatientQuestionnaireResponseResponseBody"
                },
                "examples": {
                  "CreatePatientQuestionnaireResponseResponse": {
                    "$ref": "#/components/examples/CreatePatientQuestionnaireResponseResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "BadRequestExample": {
                    "$ref": "#/components/examples/BadRequestException"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                },
                "examples": {
                  "ForbiddenExample": {
                    "$ref": "#/components/examples/ForbiddenException"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Paging": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Zero-indexed page. Value is set in the request query params"
          },
          "limit": {
            "type": "integer",
            "description": "Max limit of the number of records to get back in response. Value is set in the request query params"
          }
        }
      },
      "QuestionnaireConfiguration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object",
            "properties": {
              "ehrOrderable": {
                "type": "string",
                "description": "Value we will use as the key of the orderable in the EHR. This will be mapped to a unique ID in the Ronin system"
              },
              "providerFacing": {
                "type": "string",
                "description": "Name of the questionnaire that the provider sees"
              },
              "patientFacing": {
                "type": "string",
                "description": "Name of the questionnaire that the patient sees"
              }
            },
            "required": [
              "ehrOrderable",
              "providerFacing",
              "patientFacing"
            ]
          },
          "group": {
            "type": "string",
            "description": "ID of the questionnaire group that the questionnaire belongs to"
          },
          "triagingParty": {
            "type": "string",
            "description": "Group that will handle triaging alerts from this questionnaire"
          },
          "type": {
            "type": "string",
            "enum": [
              "SYMPTOM"
            ],
            "description": "The \"type\" of questionnaire. Used to filter out questionnaires that are not relevant to a given use case (eg, only need \"SYMPTOM\" questionnaires on the clinician dashboard)"
          },
          "timing": {
            "type": "object",
            "properties": {
              "startDelay": {
                "description": "Period of time between the starting trigger and the time that it is available to the patient. Available immediately after trigger if omitted",
                "type": "object",
                "properties": {
                  "duration": {
                    "type": "integer",
                    "description": "Number of `<durationUUit>`s between starting trigger and availability"
                  },
                  "durationUnit": {
                    "$ref": "#/components/schemas/DurationUnit"
                  }
                },
                "required": [
                  "duration",
                  "durationUnit"
                ]
              },
              "endDelay": {
                "description": "Period of time between the ending trigger and the time that it is available to the patient. Unavailable immediately after trigger if omitted",
                "type": "object",
                "properties": {
                  "duration": {
                    "type": "integer",
                    "description": "Number of `<durationUnit>`s between ending trigger and availability"
                  },
                  "durationUnit": {
                    "$ref": "#/components/schemas/DurationUnit"
                  }
                },
                "required": [
                  "duration",
                  "durationUnit"
                ]
              },
              "repeat": {
                "description": "See FHIR `Timing -> repeat` object for inspiration https://www.hl7.org/fhir/datatypes.html#Timing\n",
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer",
                    "description": "Number of times to repeat the period. If omitted, the questionnaire will have no pre-set end date"
                  },
                  "period": {
                    "type": "number",
                    "description": "Default value for the number of `<periodUnit>`s that the questionnaire will be available to the patient"
                  },
                  "periodUnit": {
                    "type": "string",
                    "description": "Defines the unit for the `period` value. eg, if `period` is `2` and `periodUnit` is `m`, the default duration for the questionnaire will be 2 months. Values taken from FHIR time units value set. See https://build.fhir.org/valueset-units-of-time.html#definition.",
                    "enum": [
                      "d",
                      "wk",
                      "mo",
                      "a"
                    ]
                  },
                  "frequency": {
                    "type": "integer",
                    "description": "Number of times questionnaire is available within the period. No frequency limit is set when this is omitted"
                  },
                  "dayOfWeek": {
                    "type": "array",
                    "description": "Days of the week that the questionnaire should be available. Defaults to all days in the week when this is omitted",
                    "items": {
                      "type": "string",
                      "enum": [
                        "mon",
                        "tue",
                        "wed",
                        "thu",
                        "fri",
                        "sat",
                        "sun"
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "repeat"
            ]
          }
        },
        "required": [
          "name",
          "type",
          "timing"
        ]
      },
      "QuestionnaireFile": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "The name of the file"
          },
          "uploadedTimestamp": {
            "type": "string",
            "description": "Date and time that the file was uploaded"
          },
          "uploadedBy": {
            "type": "string",
            "description": "User that uploaded the file"
          },
          "url": {
            "type": "string",
            "description": "URL of the file (for downloading)"
          }
        },
        "required": [
          "fileName",
          "uploadedTimestamp",
          "uploadedBy",
          "url"
        ]
      },
      "Questionnaire": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUID generated by Ronin"
          },
          "tenantId": {
            "type": "string",
            "description": "ID of the tenant"
          },
          "version": {
            "type": "integer",
            "description": "Version number of the questionnaire. Increments by one each time a questionnaire is updated"
          },
          "configuration": {
            "$ref": "#/components/schemas/QuestionnaireConfiguration"
          },
          "file": {
            "$ref": "#/components/schemas/QuestionnaireFile"
          }
        },
        "required": [
          "id",
          "tenantId",
          "version",
          "configuration",
          "file"
        ]
      },
      "DurationUnit": {
        "type": "string",
        "description": "Possible units of a duration",
        "enum": [
          "h",
          "d",
          "wk",
          "mo",
          "a"
        ]
      },
      "UpsertQuestionnaireRequestBody": {
        "type": "object",
        "properties": {
          "configuration": {
            "$ref": "#/components/schemas/QuestionnaireConfiguration"
          },
          "file": {
            "type": "string",
            "description": "ID of the file that contains the questionnaire JSON"
          }
        },
        "required": [
          "configuration",
          "file"
        ]
      },
      "UpsertQuestionnaireResponseBody": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Questionnaire"
          }
        },
        "required": [
          "data"
        ]
      },
      "FetchQuestionnairesResponseBody": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "paging": {
                "$ref": "#/components/schemas/Paging"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Questionnaire"
                }
              }
            }
          }
        ]
      },
      "FetchPatientQuestionnairesResponseBody" : {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FHIR_Questionnaire"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "FetchPatientQuestionnaireResponseBody": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FHIR_Questionnaire"
          }
        },
        "required": [
          "data"
        ]
      },
      "CreatePatientQuestionnaireResponseRequestBody": {
        "type": "object",
        "properties": {
          "questionnaireResponseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FHIR_QuestionnaireResponseItem"
            }
          }
        },
        "required": [
          "questionnaireResponseItems"
        ]
      },
      "CreatePatientQuestionnaireResponseResponseBody": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FHIR_QuestionnaireResponse"
          }
        },
        "required": [
          "data"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for this error"
          },
          "source": {
            "type": "string",
            "description": "Service where the error originated"
          },
          "httpStatus": {
            "type": "string",
            "enum": [
              "NOT_FOUND",
              "FORBIDDEN",
              "BAD_REQUEST"
            ],
            "description": "String representation of HTTP status"
          },
          "timestamp": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "description": "HTTP status"
          },
          "error": {
            "type": "string",
            "description": "Human readable form of the exception or httpStatus. This MUST be included"
          },
          "exception": {
            "type": "string",
            "description": "The exception class"
          },
          "message": {
            "type": "string",
            "description": "Human readable message"
          },
          "detail": {
            "type": "string",
            "description": "A human readable message that describes the specific failure"
          }
        }
      },
      "FHIR_Questionnaire": {
        "type": "object",
        "description": "FHIR representation of a questionnaire",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUID with the tenant ID as a prefix"
          },
          "url": {
            "type": "string",
            "description": "Location of the questionnaire"
          },
          "identifier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FHIR_QuestionnaireIdentifier"
            },
            "description": "List of associated identities. Will primarily (and possibly only) be used for the tenant ID"
          },
          "version": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "description": "Computer-friendly name for the questionnaire"
          },
          "title": {
            "type": "string",
            "description": "Human-friendly name for the questionnaire"
          },
          "status": {
            "$ref": "#/components/schemas/FHIR_QuestionnaireStatus"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Last revision date"
          },
          "item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FHIR_QuestionnaireItem"
            }
          }
        },
        "required": [
          "id",
          "url",
          "identifier",
          "version",
          "name",
          "title",
          "status",
          "experimental",
          "date",
          "item"
        ]
      },
      "FHIR_QuestionnaireResponse": {
        "type": "object",
        "description": "FHIR representation of a questionnaire response",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUID with the tenant ID as a prefix"
          },
          "questionnaire": {
            "type": "string",
            "description": "The ID associated Questionnaire"
          },
          "item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FHIR_QuestionnaireResponseItem"
            }
          }
        },
        "required": [
          "id",
          "questionnaire",
          "item"
        ]
      },
      "FHIR_QuestionnaireIdentifier": {
        "type": "object",
        "properties": {
          "system": {
            "type": "string",
            "description": "Identifier for the identifier type. Eg, whether this is a tenant, provider, patient, etc"
          },
          "value": {
            "type": "string",
            "description": "Value of the identity. Eg, the tenant ID"
          }
        }
      },
      "FHIR_QuestionnaireStatus": {
        "type": "string",
        "enum": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "FHIR_QuestionnaireResponseItem": {
        "type": "object",
        "description": "FHIR representation of an answer in a questionnaire response",
        "properties": {
          "linkId": {
            "type": "string",
            "description": "Globally unique ID of the question"
          },
          "answer": {
            "type": "array",
            "items": {
              "allOf": [
                { "$ref": "#/components/schemas/FHIR_TypedValues" },
                {
                  "type": "object",
                  "properties": {
                    "extension": {
                      "type": "array",
                      "description": "General-purpose object for extending the definition of a FHIR model. For Ronin questionnaires, the primary (and possible only) use will be capturing the \"valueDecimal\", which will represent the alert level of an answer",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Identifier for the extension type"
                          },
                          "valueDecimal": {
                            "type": "number",
                            "description": "Used to capture the alert-level of the answer"
                          }
                        },
                        "required": [
                          "valueDecimal"
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "required": [
          "linkId",
          "answer"
        ]
      },
      "FHIR_QuestionnaireItem": {
        "type": "object",
        "description": "FHIR representation of a question in a questionnaire",
        "properties": {
          "linkId": {
            "type": "string",
            "description": "Globally unique ID of the question"
          },
          "text": {
            "type": "string",
            "description": "Value to be displayed to the user"
          },
          "type": {
            "type": "string",
            "enum": [
              "group",
              "boolean",
              "decimal",
              "integer",
              "date",
              "dateTime",
              "choice"
            ]
          },
          "repeats": {
            "type": "boolean",
            "description": "Whether multiple answers can be selected. Typical multiple-choice questions would have `type: choice` and `repeats: true`. Defaults to `false`"
          },
          "enableWhen": {
            "type": "array",
            "description": "Mechanism for enabling/disabling a question based on a predicate.\n Eg, given the the object `{ \"question\": 123, \"operator\": \"=\", \"Hello\" }`, this question would only be presented if the question with the ID `123` had the answer \"Hello\" ",
            "items": {
              "type": "object",
              "properties": {
                "question": {
                  "type": "string"
                },
                "operator": {
                  "type": "string",
                  "enum": [
                    "exists",
                    "=",
                    "!=",
                    ">",
                    "<",
                    ">=",
                    "<="
                  ]
                },
                "answer": {
                  "$ref": "#/components/schemas/FHIR_TypedValues"
                }
              },
              "required": [
                "question",
                "operator",
                "answer"
              ]
            }
          },
          "enableBehavior": {
            "type": "string",
            "description": "How to handle multiple `enableWhen` predicates - whether all or any of them must be true. This value must be present if multiple `enableWhen` values are present",
            "enum": [
              "any",
              "all"
            ]
          },
          "answerOption": {
            "type": "array",
            "items": {
              "allOf": [
                { "$ref": "#/components/schemas/FHIR_TypedValues" },
                {
                  "type": "object",
                  "properties": {
                    "initialSelected": {
                      "type": "boolean",
                      "description": "Whether this answer should be selected by default"
                    }
                  }
                }
              ]
            }
          },
          "initial": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FHIR_TypedValues"
            }
          },
          "readOnly": {
            "type": "boolean"
          },
          "item": {
            "type": "array",
            "description": "Used to support nested items when `type == group`",
            "items": {
              "$ref": "#/components/schemas/FHIR_QuestionnaireItem"
            }
          }
        },
        "required": [
          "linkId",
          "text",
          "type"
        ]
      },
      "FHIR_TypedValues": {
        "type": "object",
        "description": "Possible values to be used based on the type of answer being provided",
        "properties": {
          "valueInteger": {
            "type": "integer"
          },
          "valueDecimal": {
            "type": "number"
          },
          "valueDate": {
            "type": "string",
            "format": "date"
          },
          "valueDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "valueString": {
            "type": "string"
          },
          "valueCoding": {
            "type": "object",
            "description": "Used for single and multiple-choice questions, as we can use the `system` and `code` values to find the correct value set, and value within the value set",
            "properties": {
              "system": {
                "type": "string",
                "description": "Value pointing to the value set"
              },
              "code": {
                "type": "string",
                "description": "Computer-friendly representation of the answer option"
              },
              "display": {
                "type": "string",
                "description": "Human-friendly representation of the answer option"
              }
            }
          }
        }
      }
    },
    "examples": {
      "UpsertQuestionnaireRequestBody": {
        "summary": "Example request body for creating a questionnaire that is available to take any time for six months",
        "value": {
          "configuration": {
            "name": {
              "ehrOrderable": "BD: (Breast Daily) Symptoms",
              "providerFacing": "Daily Breast Cancer Symptoms Questionnaire",
              "patientFacing": "Breast Cancer Symptoms Questionnaire"
            },
            "type": "SYMPTOM",
            "group": "9f20974e-eba4-4f6f-935b-061b8240577e",
            "triagingParty": "67163dcf-9473-405e-9aaf-4627e6c478b6",
            "timing": {
              "startDelay": {
                "duration": 3,
                "durationUnit": "d"
              },
              "repeat": {
                "count": 6,
                "period": 1,
                "periodUnit": "mo"
              }
            }
          },
          "file": "eac587fc-6f18-41ea-a320-46ae13a0046c"
        }
      },
      "UpsertQuestionnaireResponse": {
        "summary": "Successful Create/Update",
        "value": {
          "data": {
            "id": "d78f8706-6e68-49b0-a57c-4a0f3aedb128",
            "tenantId": "ca41ec2f-621d-4b7d-93e6-38ec50854b5e",
            "version": 1,
            "configuration": {
              "name": {
                "ehrOrderable": "BD: (Breast Daily) Symptoms",
                "providerFacing": "Daily Breast Cancer Symptoms Questionnaire",
                "patientFacing": "Breast Cancer Symptoms Questionnaire"
              },
              "type": "SYMPTOM",
              "group": "9f20974e-eba4-4f6f-935b-061b8240577e",
              "triagingParty": "67163dcf-9473-405e-9aaf-4627e6c478b6",
              "timing": {
                "startDelay": {
                  "duration": 3,
                  "durationUnit": "d"
                },
                "repeat": {
                  "count": 6,
                  "period": 1,
                  "periodUnit": "mo"
                }
              }
            },
            "file": {
              "fileName": "psj-breast-cancer-symptoms-questionnaire.json",
              "uploadedTimestamp": "2023-11-13T08:23:43.43Z",
              "uploadedBy": "Lynda Johnson",
              "url": "https://ico.ronin.io/questionnaires/psj-breast-cancer-symptoms-questionnaire.json"
            }
          }
        }
      },
      "FetchQuestionnairesResponse": {
        "summary": "Successful Fetch",
        "value": {
          "paging": {
            "page": 0,
            "limit": 2
          },
          "data": [
            {
              "id": "d78f8706-6e68-49b0-a57c-4a0f3aedb128",
              "tenantId": "ca41ec2f-621d-4b7d-93e6-38ec50854b5e",
              "version": 1,
              "configuration": {
                "name": {
                  "ehrOrderable": "BD: (Breast Daily) Symptoms",
                  "providerFacing": "Daily Breast Cancer Symptoms Questionnaire",
                  "patientFacing": "Breast Cancer Symptoms Questionnaire"
                },
                "type": "SYMPTOM",
                "group": "9f20974e-eba4-4f6f-935b-061b8240577e",
                "triagingParty": "67163dcf-9473-405e-9aaf-4627e6c478b6",
                "timing": {
                  "startDelay": {
                    "duration": 3,
                    "durationUnit": "d"
                  },
                  "repeat": {
                    "count": 6,
                    "period": 1,
                    "periodUnit": "mo"
                  }
                }
              },
              "file": {
                "fileName": "psj-breast-cancer-symptoms-questionnaire.json",
                "uploadedTimestamp": "2023-11-13T08:23:43.02Z",
                "uploadedBy": "Lynda Johnson",
                "url": "https://ico.ronin.io/questionnaires/psj-breast-cancer-symptoms-questionnaire.json"
              }
            },
            {
              "id": "c45751b4-7b20-4e67-b607-0e1d5661301b",
              "tenantId": "ca41ec2f-621d-4b7d-93e6-38ec50854b5e",
              "version": 1,
              "configuration": {
                "name": {
                  "ehrOrderable": "LD: (Lung Daily) Symptoms",
                  "providerFacing": "Daily Lung Cancer Symptoms Questionnaire",
                  "patientFacing": "Lung Cancer Symptoms Questionnaire"
                },
                "type": "SYMPTOM",
                "triagingParty": "67163dcf-9473-405e-9aaf-4627e6c478b6",
                "timing": {
                  "repeat": {
                    "count": 12,
                    "period": 1,
                    "periodUnit": "mo"
                  }
                }
              },
              "file": {
                "fileName": "psj-lung-cancer-symptoms-questionnaire.json",
                "uploadedTimestamp": "2023-19-25T06:53:17.02Z",
                "uploadedBy": "Lynda Johnson",
                "url": "https://ico.ronin.io/questionnaires/psj-lung-cancer-symptoms-questionnaire.json"
              }
            }
          ]
        }
      },
      "FetchPatientQuestionnairesResponse": {
        "summary": "successful fetch",
        "value": {
          "data": [
            {
              "id": "1xrekpx5-9b93f927-b4ec-45c1-9d02-97a9f838b871",
              "url": "https://projectronin.io/questionnaires/9b93f927-b4ec-45c1-9d02-97a9f838b871",
              "identifier": [
                {
                  "system": "http://projectronin.com/id/tenantId",
                  "value": "1xrekpx5"
                }
              ],
              "version": 1.0,
              "name": "psj-breast-cancer-symptoms",
              "title": "PSJ Breast Cancer Symptoms",
              "status": "active",
              "date": "2023-12-01T08:34:73.13Z",
              "item": [
                {
                  "linkId": "90791038-d987-46d5-b8bd-a80d3f2a8579",
                  "text": "How many cups of water are you drinking?",
                  "type": "choice",
                  "answerOption": [
                    {
                      "value": {
                        "valueString": "None"
                      }
                    },
                    {
                      "value": {
                        "valueString": "At least one"
                      }
                    },
                    {
                      "value": {
                        "valueString": "Two or more"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "FetchPatientQuestionnaireResponse": {
        "summary": "successful fetch",
        "value": {
          "data": {
            "id": "1xrekpx5-9b93f927-b4ec-45c1-9d02-97a9f838b871",
            "url": "https://projectronin.io/questionnaires/9b93f927-b4ec-45c1-9d02-97a9f838b871",
            "identifier": [
              {
                "system": "http://projectronin.com/id/tenantId",
                "value": "1xrekpx5"
              }
            ],
            "version": 1.0,
            "name": "psj-breast-cancer-symptoms",
            "title": "PSJ Breast Cancer Symptoms",
            "status": "active",
            "date": "2023-12-01T08:34:73.13Z",
            "item": [
              {
                "linkId": "90791038-d987-46d5-b8bd-a80d3f2a8579",
                "text": "How many cups of water are you drinking?",
                "type": "choice",
                "answerOption": [
                  {
                    "value": {
                      "valueString": "None"
                    }
                  },
                  {
                    "value": {
                      "valueString": "At least one"
                    }
                  },
                  {
                    "value": {
                      "valueString": "Two or more"
                    }
                  }
                ]
              }
            ]
          }
        }
      },
      "CreatePatientQuestionnaireResponseRequest": {
        "summary": "example create patient questionnaire-response request",
        "value": {
          "questionnaireResponseItems": [
            {
              "linkId": "item-1",
              "answer": [
                {
                  "valueBoolean": true,
                  "extension": [
                    {
                      "valueDecimal": 1
                    }
                  ]
                }
              ]
            },
            {
              "linkId": "item-2",
              "answer": [
                {
                  "valueString": "some-string",
                  "extension": [
                    {
                      "valueDecimal": 2
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "CreatePatientQuestionnaireResponseResponse": {
        "summary": "create patient questionnaire-response response",
        "value": {
          "data": {
            "id": "9d81ae65-00be-4243-aace-c23915d923d9",
            "questionnaire": "d78f8706-6e68-49b0-a57c-4a0f3aedb128",
            "item": [
              {
                "linkId": "item-1",
                "answer": [
                  {
                    "valueBoolean": true,
                    "extension": [
                      {
                        "valueDecimal": 1
                      }
                    ]
                  }
                ]
              },
              {
                "linkId": "item-2",
                "answer": [
                    {
                      "valueString": "some-string",
                      "extension": [
                        {
                          "valueDecimal": 2
                        }
                      ]
                    }
                ]
              }
            ]
          }
        }
      },
      "FHIR_QuestionnaireExample": {
        "description": "Example of a FHIR questionnaire",
        "value": {
          "id": "1xrekpx5-9b93f927-b4ec-45c1-9d02-97a9f838b871",
          "url": "https://projectronin.io/questionnaires/9b93f927-b4ec-45c1-9d02-97a9f838b871",
          "identifier": [
            {
              "system": "http://projectronin.com/id/tenantId",
              "value": "1xrekpx5"
            }
          ],
          "version": 1.0,
          "name": "psj-breast-cancer-symptoms",
          "title": "PSJ Breast Cancer Symptoms",
          "status": "active",
          "date": "2023-12-01T08:34:73.13Z",
          "item": [
            {
              "linkId": "90791038-d987-46d5-b8bd-a80d3f2a8579",
              "text": "How many cups of water are you drinking?",
              "type": "choice",
              "answerOption": [
                {
                  "value": {
                    "valueString": "None"
                  }
                },
                {
                  "value": {
                    "valueString": "At least one"
                  }
                },
                {
                  "value": {
                    "valueString": "Two or more"
                  }
                }
              ]
            }
          ]
        }
      },
      "FHIR_QuestionnaireResponseExample": {
        "description": "Example of a FHIR questionnaire response",
        "value": {
          "id": "e94b25aa-1ff6-42e2-b252-a50227336c8f",
          "questionnaire": "9b93f927-b4ec-45c1-9d02-97a9f838b871",
          "item": [
            {
              "linkId": "90791038-d987-46d5-b8bd-a80d3f2a8579",
              "answer": [
                {
                  "value": {
                    "valueString": "None"
                  }
                },
                {
                  "value": {
                    "valueString": "At least one"
                  }
                },
                {
                  "value": {
                    "valueString": "Two or more"
                  }
                }
              ]
            }
          ]
        }
      },
      "NotFoundException": {
        "summary": "Resource Not Found",
        "value": {
          "errors": [
            {
              "id": "85467c94-4cae-4b66-ad50-67e10a4ddd49",
              "source": "questionnaire-service",
              "httpStatus": "NOT_FOUND",
              "timestamp": "2023-19-25T06:53:17.45Z",
              "status": 404,
              "error": "Resource not found",
              "exception": "com.projectronin.product.common.exception.NotFoundException",
              "message": "Questionnaire with ID 0217a62f-f72b-4e42-889a-085a85cca3b7 not found",
              "detail": "No questionnaire in the DB found with the ID 0217a62f-f72b-4e42-889a-085a85cca3b7"
            }
          ]
        }
      },
      "BadRequestException": {
        "summary": "Bad Request",
        "value": {
          "errors": [
            {
              "id": "8b03fbee-7e96-4491-9621-73ca0213c27d",
              "source": "questionnaire-service",
              "httpStatus": "BAD_REQUEST",
              "timestamp": "2023-19-25T06:53:17.62Z",
              "status": 400,
              "error": "Bad request",
              "exception": "com.projectronin.product.common.exception.BadRequestException",
              "message": "Could not parse request body",
              "detail": "Must include the \"type\" property"
            }
          ]
        }
      },
      "ForbiddenException": {
        "summary": "Forbidden",
        "value": {
          "errors": [
            {
              "id": "8b03fbee-7e96-4491-9621-73ca0213c27d",
              "source": "questionnaire-service",
              "httpStatus": "FORBIDDEN",
              "status": 403,
              "error": "Forbidden",
              "exception": "com.projectronin.produce.common.exception.ForbiddenException",
              "message": "Forbidden",
              "detail": "No"
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
